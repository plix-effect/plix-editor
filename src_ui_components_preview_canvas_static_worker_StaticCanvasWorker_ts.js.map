{"version":3,"sources":["webpack://@plix-effect/editor/./src/ui/components/preview/canvas/static/worker/StaticCanvasWorker.ts","webpack://@plix-effect/editor/webpack/bootstrap","webpack://@plix-effect/editor/webpack/runtime/compat get default export","webpack://@plix-effect/editor/webpack/runtime/define property getters","webpack://@plix-effect/editor/webpack/runtime/ensure chunk","webpack://@plix-effect/editor/webpack/runtime/get javascript chunk filename","webpack://@plix-effect/editor/webpack/runtime/get mini-css chunk filename","webpack://@plix-effect/editor/webpack/runtime/global","webpack://@plix-effect/editor/webpack/runtime/hasOwnProperty shorthand","webpack://@plix-effect/editor/webpack/runtime/make namespace object","webpack://@plix-effect/editor/webpack/runtime/startup chunk dependencies","webpack://@plix-effect/editor/webpack/runtime/publicPath","webpack://@plix-effect/editor/webpack/runtime/importScripts chunk loading","webpack://@plix-effect/editor/webpack/startup"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAA4C;AACsB;AAEA;AACA;AAMlE,IAAI,MAAuB,CAAC;AAC5B,IAAI,SAA4C,CAAC;AACjD,IAAI,UAA0C,CAAC;AAC/C,IAAI,UAAU,GAAgB,IAAI,CAAC;AACnC,IAAI,QAAQ,GAAW,CAAC,CAAC;AACzB,IAAI,KAAa,CAAC;AAGlB,MAAM,YAAY,GAAG,GAAG,EAAE;IACtB,MAAM,MAAM,GAAW,UAAU,CAAC,MAAM,CAAC;IACzC,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;IAC3B,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;IAE7B,MAAM,mBAAmB,GAA2C;QAChE,IAAI,EAAE,QAAQ;QACd,MAAM,EAAE,QAAQ;QAChB,KAAK,EAAE,IAAI;KACd;IACD,IAAI,CAAC,WAAW,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;IAE1C,KAAK,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,MAAM,EAAE,CAAC,EAAE,EAAC;QACxB,MAAM,QAAQ,GAAG,IAAI,iBAAiB,CAAC,KAAK,GAAC,CAAC,CAAC,CAAC;QAChD,MAAM,IAAI,GAAG,MAAM,CAAC,CAAC,GAAC,MAAM,GAAC,QAAQ,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;QACxD,KAAK,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,KAAK,EAAE,CAAC,EAAE,EAAC;YACvB,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,GAAC,KAAK,GAAC,UAAU,EAAE,UAAU,CAAC,CAAC;YACjD,MAAM,KAAK,GAAG,GAAG,CAAC,sEAAiB,CAAC,CAAC;YACrC,MAAM,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,+DAAM,CAAC,KAAK,CAAC,CAAC;YAChC,MAAM,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;YACpB,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACpB,QAAQ,CAAC,KAAK,GAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACtB,QAAQ,CAAC,KAAK,GAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACtB,QAAQ,CAAC,KAAK,GAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAC,GAAG,CAAC,GAAC,CAAC,CAAC;SACjC;QACD,MAAM,SAAS,GAAG,SAAS,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACtD,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC7B,SAAS,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;KAC3C;IAED,MAAM,iBAAiB,GAA2C;QAC9D,IAAI,EAAE,QAAQ;QACd,MAAM,EAAE,MAAM;QACd,KAAK,EAAE,IAAI;KACd;IACD,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC;AAE5C,CAAC;AAED,SAAS,GAAG,CAAC,KAAK,EAAE,EAAE;IAClB,MAAM,GAAG,GAAG,KAAK,CAAC,IAAuC,CAAC;IAC1D,IAAI,GAAG,CAAC,IAAI,KAAK,MAAM,EAAE;QACrB,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;QACpB,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;KACvC;SAAM,IAAI,GAAG,CAAC,IAAI,KAAK,QAAQ,EAAE;QAC9B,MAAM,EAAC,MAAM,EAAE,KAAK,EAAC,GAAG,GAAG,CAAC;QAC5B,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;QACxB,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;QAClB,IAAI;YACA,MAAM,aAAa,GAA2C;gBAC1D,IAAI,EAAE,QAAQ;gBACd,MAAM,EAAE,OAAO;gBACf,KAAK,EAAE,IAAI;aACd;YACD,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;YACpC,UAAU,GAAG,0DAAW,CAAC,MAAM,EAAE,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,EAAE,sDAAoB,EAAE,sDAAoB,CAAE,CAAC;YAC5G,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,IAAI,EAAE,CAAC;YAC7D,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,IAAI,EAAE,CAAC;YAC7D,MAAM,WAAW,GAAyC,EAAC,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC,EAAC;YACxG,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;YAClC,YAAY,EAAE,CAAC;SAClB;QAAC,OAAO,KAAK,EAAE;YACZ,MAAM,aAAa,GAA2C;gBAC1D,IAAI,EAAE,QAAQ;gBACd,MAAM,EAAE,OAAO;gBACf,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC;aACvB;YACD,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;SACvC;KAEJ;SAAM,IAAI,GAAG,CAAC,IAAI,KAAK,MAAM,EAAE;QAC5B,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK;QACxB,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;QAC3B,UAAU,GAAG,GAAG,CAAC,UAAU;QAC3B,YAAY,EAAE,CAAC;KAClB;AACL,CAAC;;;;;;;UC9FD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;;;;;WC/BA;WACA;WACA;WACA;WACA;WACA,gCAAgC,YAAY;WAC5C;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF,E;;;;;WCRA;WACA;WACA;WACA;WACA,E;;;;;WCJA;WACA;WACA;WACA;WACA,E;;;;;WCJA;WACA;WACA;WACA;WACA,EAAE;WACF;WACA;WACA,CAAC,I;;;;;WCPD,sF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;WCNA;WACA;WACA;WACA,E;;;;;WCHA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,kC;;;;;WCfA;;WAEA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;WAEA;;WAEA,kB;;;;UClCA;UACA","file":"src_ui_components_preview_canvas_static_worker_StaticCanvasWorker_ts.js","sourcesContent":["import parseRender from \"@plix-effect/core\";\nimport {toRgba, TRANSPARENT_BLACK} from \"@plix-effect/core/color\";\nimport {Effect} from \"@plix-effect/core/types\";\nimport * as effectConstructorMap from \"@plix-effect/core/effects\";\nimport * as filterConstructorMap from \"@plix-effect/core/filters\";\nimport {PlixEffectJsonData} from \"@plix-effect/core/dist/types/parser\";\nimport {PlixJsonData} from \"@plix-effect/core/types/parser\";\n\ndeclare const self: Worker;\n\nlet canvas: OffscreenCanvas;\nlet canvasCtx: OffscreenCanvasRenderingContext2D;\nlet parsedData: ReturnType<typeof parseRender>;\nlet pixelCount: number|null = null;\nlet duration: number = 0;\nlet start: number;\n\n\nconst renderCanvas = () => {\n    const effect: Effect = parsedData.effect;\n    const width = canvas.width;\n    const height = canvas.height;\n\n    const statusRenderMessage: StaticPreviewWorkerOutputMessageStatus = {\n        type: \"status\",\n        status: \"render\",\n        error: null,\n    }\n    self.postMessage(statusRenderMessage, []);\n\n    for (let h=0; h<height; h++){\n        const colorMap = new Uint8ClampedArray(width*4);\n        const line = effect(h/height*duration, duration, start);\n        for (let w=0; w<width; w++){\n            const mod = line(w/width*pixelCount, pixelCount);\n            const color = mod(TRANSPARENT_BLACK);\n            const {r,g,b,a} = toRgba(color);\n            const index = w * 4;\n            colorMap[index] = r;\n            colorMap[index+1] = g;\n            colorMap[index+2] = b;\n            colorMap[index+3] = (a*255)|0;\n        }\n        const imageData = canvasCtx.createImageData(width, 1);\n        imageData.data.set(colorMap);\n        canvasCtx.putImageData(imageData, 0, h);\n    }\n\n    const statusDoneMessage: StaticPreviewWorkerOutputMessageStatus = {\n        type: \"status\",\n        status: \"done\",\n        error: null,\n    }\n    self.postMessage(statusDoneMessage, []);\n\n}\n\nonmessage = (event) => {\n    const msg = event.data as StaticPreviewWorkerInputMessage;\n    if (msg.type === \"init\") {\n        canvas = msg.canvas;\n        canvasCtx = canvas.getContext(\"2d\");\n    } else if (msg.type === \"effect\") {\n        const {render, track} = msg;\n        duration = msg.duration;\n        start = msg.start;\n        try {\n            const statusMessage: StaticPreviewWorkerOutputMessageStatus = {\n                type: \"status\",\n                status: \"parse\",\n                error: null,\n            }\n            self.postMessage(statusMessage, []);\n            parsedData = parseRender(render, track.effects, track.filters, effectConstructorMap, filterConstructorMap );\n            const effectKeys = Object.keys(parsedData.effectsMap).sort();\n            const filterKeys = Object.keys(parsedData.filtersMap).sort();\n            const depsMessage: StaticPreviewWorkerOutputMessageDeps = {type: \"deps\", data: [effectKeys, filterKeys]}\n            self.postMessage(depsMessage, []);\n            renderCanvas();\n        } catch (error) {\n            const statusMessage: StaticPreviewWorkerOutputMessageStatus = {\n                type: \"status\",\n                status: \"error\",\n                error: String(error),\n            }\n            self.postMessage(statusMessage, []);\n        }\n\n    } else if (msg.type === \"size\") {\n        canvas.width = msg.width\n        canvas.height = msg.height;\n        pixelCount = msg.pixelCount\n        renderCanvas();\n    }\n}\n\n\nexport type StaticPreviewWorkerInputMessage =\n    | StaticPreviewWorkerInputMessageInit\n    | StaticPreviewWorkerInputMessageEffect\n    | StaticPreviewWorkerInputMessageSizes\n\nexport interface StaticPreviewWorkerInputMessageInit {\n    type: \"init\"\n    canvas: OffscreenCanvas\n}\n\nexport interface StaticPreviewWorkerInputMessageEffect {\n    type: \"effect\"\n    render: PlixEffectJsonData,\n    track: PlixJsonData,\n    duration: number,\n    start: number,\n    profileName: string|null,\n}\nexport interface StaticPreviewWorkerInputMessageSizes {\n    type: \"size\",\n    width: number,\n    height: number,\n    pixelCount: number|null\n}\n\nexport interface StaticPreviewWorkerOutputMessageDeps {\n    type: \"deps\",\n    data: [string[], string[]]\n}\n\nexport interface StaticPreviewWorkerOutputMessageStatus {\n    type: \"status\",\n    status: \"none\" | \"parse\" | \"render\" | \"done\" | \"error\"\n    error: string | null\n}\n\nexport type StaticPreviewWorkerOutputMessage = StaticPreviewWorkerOutputMessageDeps | StaticPreviewWorkerOutputMessageStatus;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module\n\t__webpack_require__(\"./src/ui/components/preview/canvas/static/worker/StaticCanvasWorker.ts\");\n\t// This entry module used 'exports' so it can't be inlined\n};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","// This function allow to reference all chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"style/style-\" + chunkId + \".css\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(\"vendors-node_modules_plix-effect_core_dist_effects_index_js-node_modules_plix-effect_core_dis-eb2327\").then(next);\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t\"src_ui_components_preview_canvas_static_worker_StaticCanvasWorker_ts\": 1\n};\n\n// importScripts chunk loading\nvar chunkLoadingCallback = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\timportScripts(\"\" + __webpack_require__.u(chunkId));\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunk_plix_effect_editor\"] = self[\"webpackChunk_plix_effect_editor\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = chunkLoadingCallback;\n\n// no HMR\n\n// no HMR manifest","// run startup\nreturn __webpack_require__.x();\n"],"sourceRoot":""}